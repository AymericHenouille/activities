name: '🏗️ Build Angular app'
on:
  push:
    branch:
      - master
jobs:
  install_dependencies:
    name: '🔨 Install dependencies'
    runs-on: ubuntu-latest
    steps:
      - name: '📥 Checkout repository'
        uses: actions/checkout@v3
      - name: '📩 Cache dependencies'
        uses: actions/cache@v3
        with:
          path: |
            ./node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-
      - name: '📦 Install dependencies'
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install
  lint:
    name: '🔍 Lint project'
    runs-on: ubuntu-latest
    needs: [install_dependencies]
    steps:
      - name: '📥 Checkout repository'
        uses: actions/checkout@v3
      - name: '📩 Cache dependencies'
        uses: actions/cache@v3
        with:
          path: |
            ./node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-
      - name: '🔍 Lint project'
        run: npm run lint
  test:
    name: '🧪 Run tests'
    runs-on: ubuntu-latest
    needs: [install_dependencies]
    steps:
      - name: '📥 Checkout repository'
        uses: actions/checkout@v3
      - name: '📩 Cache dependencies'
        uses: actions/cache@v3
        with:
          path: |
            ./node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-
      - name: '🧪 Run tests'
        run: npm run test:ci
  build:
    name: '🏗️ Build project'
    runs-on: ubuntu-latest
    needs: [install_dependencies]
    steps:
      - name: '📥 Checkout repository'
        uses: actions/checkout@v3
      - name: '📩 Cache dependencies'
        uses: actions/cache@v3
        with:
          path: |
            ./node_modules
            ./dist
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-
      - name: '🏗️ Build project'
        run: npm run build
  documentation:
    name: '📚 Generate documentation'
    runs-on: ubuntu-latest
    needs: [install_dependencies]
    steps:
      - name: '📥 Checkout repository'
        uses: actions/checkout@v3
      - name: '📩 Cache dependencies'
        uses: actions/cache@v3
        with:
          path: |
            ./node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-
      - name: '📚 Generate documentation'
        run: npm run compodoc:build
      - name: '📤 Upload documentation'
        uses: crazy-max/ghaction-github-pages@v2.5.0
        with:
          target_branch: gh-pages
          build_dir: documentation
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
  hosting:
    name: '🚀 Deploy to Firebase'
    runs-on: ubuntu-latest
    needs: [install_dependencies, build, test, lint]
    steps:
      - name: '📥 Checkout repository'
        uses: actions/checkout@v3
      - name: '📩 Cache dependencies'
        uses: actions/cache@v3
        with:
          path: |
            ./node_modules
            ./dist
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-
      - name: '🔥 Deploy to Firebase'
        run: npm run deploy:ci -- --token=${{ secrets.FIREBASE_TOKEN }}
